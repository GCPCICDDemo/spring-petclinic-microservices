# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature-*'
      - 'release-*'
      - 'hotfix-*'
  pull_request:
    branches:
      - main
      - 'release-*'

env:
  GCP_REGION: asia-northeast1
  GCP_PROJECT_ID: demoforgaudiy
  ARTIFACT_REGISTRY: maven
  DOCKER_REGISTRY: docker

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
        -Dsonar.projectKey=GCPCICDDemo_spring-petclinic-microservices\
        -Dsonar.organization=gcpcicddemo \
        -Dsonar.host.url=https://sonarcloud.io 
      continue-on-error: true
        

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: "${{ secrets.GCP_SA_KEY }}"

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker for Artifact Registry
      run: |-
        gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

    - name: Build Docker Images
      run: |-
        ./mvnw clean install -P buildDocker

    - name: Push Docker images
      run: |-
        docker tag springcommunity/spring-petclinic-api-gateway $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-api-gateway
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-api-gateway
        docker tag springcommunity/spring-petclinic-config-server $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-config-server
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-config-server
        docker tag springcommunity/spring-petclinic-discovery-server $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-discovery-server
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-discovery-server
        docker tag springcommunity/spring-petclinic-customers-service $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-customers-service
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-customers-service
        docker tag springcommunity/spring-petclinic-visits-service $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-visits-service
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-visits-service
        docker tag springcommunity/spring-petclinic-vets-service $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-vets-service
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-vets-service
        docker tag springcommunity/spring-petclinic-admin-server $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-admin-server
        docker push $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$DOCKER_REGISTRY/spring-petclinic-microservices-admin-server
